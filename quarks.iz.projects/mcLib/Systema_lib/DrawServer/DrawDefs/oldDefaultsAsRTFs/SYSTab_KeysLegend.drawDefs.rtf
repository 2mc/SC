{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red96\green96\blue96;\red0\green115\blue0;
\red191\green0\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 if (\cf2 this\cf0 .isLog(2)) \{ (\cf3 "\\n\\n"\cf0  + \cf2 thisProcess\cf0 .nowExecutingPath.basename + \cf3 "\\n"\cf0 ).postln; \};\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 DrawDef\cf0 (\cf4 \\SYSTab_KeysLegend\cf0 , \cf4 \\draw\cf0 , \cf2 nil\cf0 , \
	\{\cf2 |node, \cf0 drawServer, pE\cf2 |\cf0 \
		\cf2 var\cf0  displayRect, strH;\
		\
		drawServer.addActionChar($k, \{\cf2 |down, repeat|\cf0  if (down && repeat.not) \{\
			pE.keysOn = pE.keysOn.not \}; \cf2 true\cf0  \});\
		\
		\{\cf2 |e, view, keysOn, labelHFont, labelHColor, annoFont, post|\cf0 \
			if (keysOn) \{\
				displayRect = view.drawBounds.insetBy(35);\
				strH = \cf3 "A"\cf0 .bounds(labelHFont).height;\
				\cf2 Color\cf0 .grey.set; \cf2 Pen\cf0 .fillRect(displayRect); \cf2 Color\cf0 .white.set; \
				\cf2 Pen\cf0 .width = 4; \cf2 Pen\cf0 .strokeRect( view.drawBounds.insetBy(20) );\
				\cf2 Pen\cf0 .width = 2 ;\cf2 Pen\cf0 .strokeRect( displayRect );\
				\cf3 "Keys legend:"\cf0 .drawInRect(displayRect.moveBy(8, 10), labelHFont, labelHColor);\
				[\cf3 "modifiers \\tkey \\t\\ttype \\t\\tstate \\tdescription"\cf0 \
				,\cf3 ""\cf0 \
				,\cf3 "\\t\\tk \\t\\ton/of \\t"\cf0  ++ e.keysOn ++ \cf3 "\\t\\tshow this legend"\cf0 \
				,\cf3 "\\t\\tm \\t\\ton/of \\t"\cf0  ++ e.mouseOn ++ \cf3 "\\t\\tshow mouse legend"\cf0 \
				,\cf3 "alt \\t\\t0..9 \\t\\tmode \\t"\cf0  ++ e.scaleMode ++ \cf3 "\\t\\tchange Y-resolution of display"\cf0 \
					+ \cf3 "by octave ranges: "\cf0  + e.octaveRanges\
				\cf5 // ,"\\t\\t\\t\\t\\t\\t\\t\\t" + e.octaveRanges\cf0 \
				,\cf3 "\\t\\tr,R \\t\\tmode \\t"\cf0  ++ e.refMode \
					++ \cf3 "\\t\\tdraw reference lines (none, base, freqency, midi note)"\cf0 \
				,\cf3 "\\t\\tq,Q \\t\\tmode \\t"\cf0  ++ e.quantMode ++ \cf3 "\\t\\tquantisation of reference lines by"\cf0 \
					+ \cf3 "fractions of a tone (of 200 cent):  [1, 1/2, 1/4, 1/8]"\cf0 \
				,\cf3 "\\t\\ty \\t\\tselect \\t\\t\\tuse steps of currently selected Systema"\cf0 \
					+ \cf3 "to draw reference lines"\cf0 \
				,\cf3 "\\t\\tg \\t\\ton/of\cf0  \\t" ++ e.gridOn ++ \cf3 "\\t\\ttoggle reference line grid"\cf0 \
				,\cf3 "\\t\\ta,A \\t\\tmode \\t"\cf0  ++ e.anchorMode++\cf3 "\\t\\tanchor reference (centre, bottom, top)"\cf0 \
				,\cf3 "\\t\\ts \\t\\ton/of \\t"\cf0  ++ e.selOn ++ \cf3 "\\t\\tshow selected objects"\cf0 \
				,\cf3 ""\cf0 \
				,\cf3 "alt \\t\\tf \\t\\ton/of \\t"\cf0  ++ e.drawServer.isFullScreen ++ \cf3 "\\t\\tfull screen mode"\cf0 \
				,\cf3 "alt \\t\\th \\t\\ton/of \\t"\cf0  ++ e.drawServer.scrollersOn\
					++ \cf3 "\\t\\thide/show scroll & scale handles"\cf0 \
				,\cf3 "alt \\t\\tz \\t\\tdo \\t\\t\\t \\tequal zoom ratio adjusted from smaller value"\cf0 \
				,\cf3 "alt \\t\\tZ \\t\\tdo \\t\\t\\t \\tequal zoom ratio adjusted from bigger value"\cf0 \
				,\cf3 ""\cf0 \
				,\cf3 "alt \\t\\tp \\t\\ton/of \\t("\cf0 ++ e.drawServer.isPause ++ \cf3 ")\\tpause frame iteration of"\
					+ "draw functions"\cf0 \
				,\cf3 "alt \\t\\td \\t\\ton/of \\t"\cf0  ++ e.isPost ++ \cf3 "\\t\\tdebug posts"\cf0 \
				,\cf3 "alt \\t\\tD \\t\\ton/of \\t"\cf0  ++ e.isDebug ++ \cf3 "\\t\\tdebug posts on grey background"\cf0 \
				,\cf3 "\\t\\to \\t\\ton/of \\t"\cf0  ++ e.outline ++ \cf3 "\\t\\tdraw outlines of objects"\cf0 \
				].do\{\cf2 |str, i|\cf0 \
					str.drawInRect(displayRect.moveBy(8, 40 + (i*strH)), labelHFont, labelHColor)\};\
			\};	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf5 //post.add([\\postln, "keysOn:" + [keysOn]])\cf0 \
	\}\});\
);\
\
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 DrawDef\cf0 (\cf4 \\SYSTab_MouseLegend\cf0 , \cf4 \\draw\cf0 , \cf2 nil\cf0 , \
	\{\cf2 |node, \cf0 drawServer, pE\cf2 |\cf0 \
		\cf2 var\cf0  displayRect, strH;\
		\
		drawServer.addActionChar($m, \{\cf2 |down, repeat|\cf0  if (down && repeat.not) \{\
			pE.mouseOn = pE.mouseOn.not \}; \cf2 true\cf0  \});\
			\
		\{\cf2 |e, view, mouseOn, labelHFont, labelFColor, annoFont, post|\cf0 \
			if (mouseOn) \{\
				displayRect = view.drawBounds.insetBy(70);\
				strH = \cf3 "A"\cf0 .bounds(labelHFont).height;\
				\cf2 Color\cf0 .grey.set; \cf2 Pen\cf0 .fillRect(displayRect); \cf2 Color\cf0 .yellow.set; \
				\cf2 Pen\cf0 .width = 4; \cf2 Pen\cf0 .strokeRect( view.drawBounds.insetBy(50) );\
				\cf2 Pen\cf0 .width = 2 ;\cf2 Pen\cf0 .strokeRect( displayRect );\
				\cf3 "Mouse legend:"\cf0 .drawInRect(displayRect.moveBy(8, 10), labelHFont, labelFColor);\
				[\cf3 "modifiers \\t\\tbutton \\tclick \\t\\thow \\t\\t\\tdescription"\cf0 \
				,\cf3 ""\cf0 \
				,\cf3 "General"\cf0 \
				,\cf3 "shift \\t\\t\\tany \\t\\t\\move \\tup/down \\t\\tscale vertical resolution"\cf0 \
				,\cf3 "shift \\t\\t\\tany \\t\\t\\move \\tleft/right \\t\\tscale gab between Systemata"\cf0 \
				,\cf3 "shift \\t\\t\\tany \\t\\t\\> 3 \\t\\t\\t \\t\\treset vertical resolution"\cf0 \
				\
				,\cf3 "alt \\t\\t\\tany \\t\\t\\move \\tup/down \\t\\tmove canvas vertically"\cf0 \
				,\cf3 "alt \\t\\t\\tany \\t\\t\\move \\tleft/right \\t\\tmove canvas horizontally"\cf0 \
				,\cf3 "alt \\t\\t\\tany \\t\\t\\> 3 \\t\\t\\t \\t\\treset moves to origin"\cf0 \
				\
				,\cf3 "shift-alt \\t\\tany \\t\\t\\move \\tup/down \\t\\tzoom vertically"\cf0 \
				,\cf3 "shift-alt \\t\\tany \\t\\t\\move \\tleft/right \\t\\tzoom horizontally"\cf0 \
				,\cf3 "shift-alt \\t\\tany \\t\\t\\> 3 \\t\\t\\t \\t\\treset zoom"\cf0 \
				,\cf3 ""\cf0 \
				,\cf3 "alt-cmd \\t\\tany \\t\\t\\= 1 \\t\\toutside SYS \\tplay the clicked position"\cf0 \
				,\cf3 "shift-alt-cmd \\tany \\t\\t\\= 1 \\t\\toutside SYS \\tcontiniously sound the position"\cf0 \
				,\cf3 "ctrl-alt-cmd \\tany \\t\\t\\= 1 \\t\\toutside SYS \\tdelete all sounding positions"\cf0 \
				,\cf3 "\\t\\t\\tany \\t\\t\\move \\tposition \\t\\tchange sounding position"\cf0 \
				,\cf3 ""\cf0 \
				,\cf3 "Selection"\cf0 \
				,\cf3 "\\t\\t\\tany \\t\\t\\= 1 \\t\\titem \\t\\t\\tselect item"\cf0 \
				,\cf3 "shift \\t\\t\\tany \\t\\t\\= 1 \\t\\titem \\t\\t\\t\\add to selection"\cf0 \
				,\cf3 ""\cf0 \
				,\cf3 "Systema (SYS)"\cf0 \
				,\cf3 "\\t\\t\\tany \\t\\t\\= 2 \\t\\tlabel \\t\\tchange label string"\cf0 \
				,\cf3 "cmd \\t\\t\\tany \\t\\t\\= 1 \\t\\tSystema \\t\\tplay"\cf0 \
				,\cf3 "shift-cmd \\t\\tany \\t\\t\\= 1 \\t\\tSystema \\t\\tplayR (reverse)"\cf0 \
				,\cf3 "alt-cmd \\t\\tany \\t\\t\\= 1 \\t\\tstep of SYS \\tplay the step"\cf0 \
				,\cf3 "shift-alt-cmd \\tany \\t\\t\\= 1 \\t\\tstep of SYS \\tcontiniously sound the step"\cf0 \
				,\cf3 "ctrl-alt-cmd \\tany \\t\\t\\= 1 \\t\\tstep of SYS \\treset all sounding steps"\cf0 \
			\
				].do\{\cf2 |str, i|\cf0 \
					str.drawInRect(displayRect.moveBy(8, 40 + (i*strH)), labelHFont, labelFColor)\};\
			\};	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf5 //post.add([\\postln, "keysOn:" + [keysOn]])\cf0 \
	\}\});\
);}