{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 // if (this.isLog(2)) \{ ("\\n\\n" + thisProcess.nowExecutingPath.basename + "\\n").postln; \};\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs22 \cf2 // |name, protoCalcFunc, protoDrawFunc|\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs18 \cf2 /*\
DrawDef.all\
// 1\
d = ScaledDrawServer.new(rate: 1).active_(true); //click in win to refresh\
DrawFunc(\\postFrameRate, target: d); d.drawEnvir.parent.isPost = true;\
// 2\
d = ScaledDrawServer.new(rate: 1, fromBounds: Rect(0,0,492,492)).active_(true); d.scaledView.resize = 5; d; //click in win to refresh\
		d.scaledView.scaleHEnabled_(false).scaleVEnabled_(false); // ScaledUserViewContainer only\
		d.scaledView.moveHEnabled_(false).moveVEnabled_(false); // ScaledUserViewContainer only\
DrawFunc(\\postFrameRate, target: d); d.drawEnvir.parent.isPost = true;\
DrawScaled(\\postFrameRate, target: d); d.drawEnvir.parent.isPost = true;\
\
DrawFunc(\\postFrameRate, (dump: false), target: d); d.drawEnvir.parent.isPost = true;\
DrawScaled(\\postFrameRate, (dump: false), target: d); d.drawEnvir.parent.isPost = true;\
\
d.drawEnvir.isPost\
d.drawEnvir.parent.isPost = true\
// 3\
d = ScaledDrawServer.new(rate: 1, viewFollows: true).active_(true); //click in win to refresh\
DrawFunc(\\postFrameRate, target: d); d.drawEnvir.parent.isPost = true;\
DrawScaled(\\postFrameRate, target: d); d.drawEnvir.parent.isPost = true;\
\
(\
DrawMoved(\\testScaled, target: d);\
DrawMoved(\\testMoved, target: d);\
)\
\
d.scaledView.canvasBounds_(d.scaledView.canvasBounds.resizeBy(10, 0));\
d.scaledView.canvasBounds_(d.scaledView.canvasBounds.resizeBy(-30, -30));\
d.scaledView.canvasBounds_(d.scaledView.canvasBounds.resizeTo(600, 600));\
d.scaledView.canvasBounds_(d.scaledView.canvasBounds.moveTo(-100, 0));\
d.scaledView.canvasBounds_(d.scaledView.canvasBounds.moveTo(0, 0));\
\
problem:\
make option canvas follows ? -> no since this must be done sensibly by updating from calcTree\
\
*/\cf3 \
\
(\
\cf4 DrawDef\cf3 (\cf5 \\testScaled\cf3 , \cf4 nil\cf3 , \{\{\cf4 |e, scaledView|\cf3  \
	\cf4 Color\cf3 .yellow.set; \cf4 Pen\cf3 .width = 2; \cf4 Pen\cf3 .strokeRect( scaledView.drawBounds.insetBy(0) );\
\}\})\
\
);\
(\
\cf4 DrawDef\cf3 (\cf5 \\testMoved\cf3 , \cf4 nil\cf3 , \{\{\cf4 |e, scaledView|\cf3  \
	\cf4 Color\cf3 .white.set; \cf4 Pen\cf3 .width = 2; \cf4 Pen\cf3 .strokeRect( scaledView.canvasBounds.insetBy(4) );\
	\cf4 Color\cf3 .red.set; \cf4 Pen\cf3 .width = 2; \cf4 Pen\cf3 .strokeRect( scaledView.totalBounds.insetBy(2) );\
\}\})\
);}