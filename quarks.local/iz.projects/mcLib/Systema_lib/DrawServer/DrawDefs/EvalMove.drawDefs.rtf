{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red191\green0\blue0;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 // if (this.isLog(2)) \{ ("\\n\\n" + thisProcess.nowExecutingPath.basename + "\\n").postln; \};\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs22 \cf2 // |name, protoCalcFunc, protoDrawFunc|\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs18 \cf2 /*\
DrawDef.all\
// 1\
d = ScaledDrawServer.new(rate: 1).active_(true); //click in win to refresh\
DrawFunc(\\postFrameRate, target: d); d.drawEnvir.parent.isPost = true;\
// 2\
d = ScaledDrawServer.new(rate: 1).active_(true); d.scaledView.resize = 5; d; //click in win to refresh\
		d.scaledView.scaleHEnabled_(false).scaleVEnabled_(false); // ScaledUserViewContainer only\
		d.scaledView.moveHEnabled_(false).moveVEnabled_(false); // ScaledUserViewContainer only\
DrawFunc(\\postFrameRate, target: d); d.drawEnvir.parent.isPost = true;\
DrawScaled(\\postFrameRate, target: d); d.drawEnvir.parent.isPost = true;\
\
DrawFunc(\\postFrameRate, (dump: false), target: d); d.drawEnvir.parent.isPost = true;\
DrawScaled(\\postFrameRate, (dump: false), target: d); d.drawEnvir.parent.isPost = true;\
\
d.drawEnvir.isPost\
d.drawEnvir.parent.isPost = true\
// 3\
d = ScaledDrawServer.new(rate: 1, viewFollows: true).active_(true); //click in win to refresh\
DrawFunc(\\postFrameRate, target: d); d.drawEnvir.parent.isPost = true;\
DrawScaled(\\postFrameRate, target: d); d.drawEnvir.parent.isPost = true;\
\
d.scaledView.movePixels // ??\
\
d.scaledView.viewRect(0)                           // usefull al utility (with inset option)\
d.scaledView.viewRect_(d.scaledView.drawBounds)  	//reset\
d.scaledView.viewRect_(d.scaledView.viewRect(20))	//scaled accordingly\
\
----111\
//find the right scaleH and scaleV first, because of adoption of scrollers:\
//scale = (fromBounds.extent / rect.extent).asArray;\
(\
~drawBounds = Rect(0,0, 492, 492);\
~biggerRect = Rect.fromPoints(-12@0, 500@492); // from min and max points\
// ~scale = (~drawBounds.extent / ~biggerRect.extent).asArray; // wrong way round\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf4 ~scale = (~biggerRect.extent / ~drawBounds.extent).asArray; // ok\cf2 \
)\
\
\cf4 (\
~biggerRect = Rect.fromPoints(-12@0, 500@492);\
d.scaledView.scale = d.scaledView.drawBounds.extent / ~biggerRect.extent;\
)\cf2 \
\
(\
\cf4 ~biggerRect = Rect.fromPoints(-12@0, 500@492);\cf2 \
\cf4 d.scaledView.scale\cf2  = (~biggerRect.extent / \cf4 d.scaledView.drawBounds.extent\cf2 ).asArray;\
)\
~\cf4 biggerRect.extent\cf2 \
\
----111\
\
----222\
// canl the viewRect:\
\cf4 ~viewRect = ~drawBounds\cf2 .transformFromRect(\cf4 ~drawBounds\cf2 , \cf4 ~biggerRect\cf2 , false, 1@1, 0.5@0.5)\
\cf4 ~viewRect = ~drawBounds.transformFromRect(~biggerRect, ~drawBounds, false, 1@1, 0.5@0.5)\
~viewRect = ~drawBounds.transformFromRect(~drawBounds, ~biggerRect, false, ~scale, 0.5@0.5)\
wrong:\
~viewRect = ~drawBounds.transformFromRect(~biggerRect, ~drawBounds, false, ~scale, 0.5@0.5)\
\
~viewRect = ~drawBounds.transformFromRect(~biggerRect, ~drawBounds, false, ~scale, 0@0.5)\
~viewRect = ~drawBounds.transformFromRect(~biggerRect, ~drawBounds, false, ~scale, 1@0.5)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 \
ok:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf4 ~viewRect = ~drawBounds.transformFromRect(~drawBounds, ~biggerRect, false, ~scale, 0.5@0.5)\cf2 \
\
\cf4 ~viewRect = ~drawBounds.transformFromRect(~drawBounds, ~biggerRect, false, ~scale, 0@0.5)\
~viewRect = ~drawBounds.transformFromRect(~drawBounds, ~biggerRect, false, ~scale, 1@0.5)\cf2 \
----222\
\
----333\
// adopt transform funcs:\
\cf4 ~viewRect = ~drawBounds.transformFromRect(~drawBounds, ~biggerRect, false, ~scale, 0.5@0.5)\cf2 \
\
\
\
----333\
\
\
\
translateScale:\
transformToRect( view.drawBounds, fromBounds, keepRatio, \
			scaleH@scaleV, moveH@moveV )\
// a Rect\
Rect(0,0,492,492).transformToRect( Rect(0,0, 492, 492), Rect(0,0, 492, 492), false, 1@1, 0.5@0.5)\
// a Point\
(4@ -4).transformToRect( Rect(0,0, 492, 492), Rect(0,0, 492, 492), false, 1@1, 0.5@0.5) \
\
\
Rect(0,0,492,492).transformToRect( Rect(0, 0, 400, 492), Rect(0, 0, 492, 492), false, 1@1, 0.5@0.5) \
\
\
*/}