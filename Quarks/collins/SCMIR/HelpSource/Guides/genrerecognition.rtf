{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red191\green0\blue0;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf2 //Creating ARFF file mixing instances from multiple audio file feature extractions\cf3 \
\
\cf2 //make sure you are using the post 3.4 MFCC UGen fix\cf3 \
\
(\
\cf4 var\cf3  featureinfo = [[\cf4 MFCC\cf3 ,13]];\
\cf4 var\cf3  arff; \
\cf4 var\cf3  sources; \
\
\cf2 //array of arrays, one array for each genre class/category \cf3 \
sources = [\
[\cf5 "/data/audio/mirdata/synthpop/Speak & Spell/01 New Life.wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Speak & Spell/02 I Sometimes Wish I Was Dead (2006 Digital Remaster).wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Speak & Spell/03 Puppets (2006 Digital Remaster).wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Speak & Spell/04 Boys Say Go! (2006 Digital Remaster).wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Speak & Spell/05 Nodisco (2006 Digital Remaster).wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Speak & Spell/06 What's Your Name_.wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Speak & Spell/07 Photographic (2006 Digital Remaster).wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Speak & Spell/08 Tora! Tora! Tora! (2006 Digital Remaster).wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Speak & Spell/09 Big Muff (2006 Digital Remaster).wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Speak & Spell/10 Any Second Now (Voices) (2006 Digital Remaster).wav"\cf3 ],\
\cf2 //10 David Bowie tracks \cf3 \
[\cf5 "/data/audio/mirdata/synthpop/Lodger/01 Fantastic Voyage.wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Lodger/02 African Night Flight.wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Lodger/03 Move On.wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Lodger/04 Yassassin (Long Live).wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Lodger/05 Red Sails.wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Lodger/06 D.J..wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Lodger/07 Look Back In Anger.wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Lodger/08 Boys Keep Swinging.wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Lodger/09 Repetition.wav"\cf3 , \cf5 "/data/audio/mirdata/synthpop/Lodger/10 Red Money.wav"\cf3 ]\
];\
\
\cf2 //two types\cf3 \
arff = \cf4 SCMIR\cf3 .createARFF(\cf5 "genre.arff"\cf3 ,13,(0..(sources.size-1))); \
\
\{\
sources.collect\{\cf4 |array,i|\cf3   \
	\
	array.collect\{\cf4 |filename|\cf3  \
	\cf4 var\cf3  file; \
	\
	file = \cf4 SCMIRAudioFile\cf3 (filename,featureinfo);\
\pard\pardeftab560\ql\qnatural
\cf3 \
	file.extractFeatures(); \
\
	\cf2 //take average features over whole files   \cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 	file.gatherFeaturesBySegments([0.0]);	\
	\
	file.exportARFFInstances(arff,i);\
	\
	0.1.wait;		\
	\}; \
	\
	\};\
	\
	arff.close;\
\}.fork; \
\
)\
\
\
\
\cf2 //now train using weka\cf3 \
\pard\pardeftab560\ql\qnatural
\cf0 (\
\pard\pardeftab560\ql\qnatural
\cf6 //change for your machine \cf0 \
~wekapath = \cf7 "/Applications/weka-3-6-1/"\cf0 ; \
\
~jarpath = ~wekapath ++ \cf7 "weka.jar"\cf0 ; \
\
\cf6 //SuperCollider application folder location\cf0 \
~templocation = \cf7 "\cf0 /Applications/SuperCollider/SuperCollider3.4/\cf7 "\cf0 ;\
\
~callstart = \cf7 "java -classpath"\cf0 + ~jarpath; \
\
~arffname = ~templocation++\cf7 "genre.arff"\cf0 ; \
\
(~callstart+\cf7 "weka.classifiers.bayes.NaiveBayes -t"\cf0 +~arffname+\cf7 "-d bayes.wekamodel"\cf0 ).unixCmd\
\
)\cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 //80% correct, 20% misclassified when I test\cf3 \
\
\cf0 \
\
\cf2 //test a novel entry\cf3 \
(\
\cf4 var\cf3  featureinfo = [[\cf4 MFCC\cf3 ,13]];\
\cf4 var\cf3  arff; \
\cf4 var\cf3  sources; \
\
\cf2 //array of arrays, one array for each genre class/category \cf3 \
sources = [[\cf5 "/data/audio/mirdata/synthpop/Yellow Magic Orchestra/01 Computer Game _Theme From The Circus_.wav"\cf3 ]];\
\
\cf2 //two types as before\cf3 \
arff = \cf4 SCMIR\cf3 .createARFF(\cf5 "genreTest.arff"\cf3 ,13,[0,1]); \
\
\{\
sources.collect\{\cf4 |array,i|\cf3   \
	\
	array.collect\{\cf4 |filename|\cf3  \
	\cf4 var\cf3  file; \
	\
	file = \cf4 SCMIRAudioFile\cf3 (filename,featureinfo);\
\pard\pardeftab560\ql\qnatural
\cf3 \
	file.extractFeatures(); \
\
	\cf2 //take average features over whole files   \cf3 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf3 	file.gatherFeaturesBySegments([0.0]);	\
	\
	file.exportARFFInstances(arff,1);	\cf2 //FORCE IT TO BE CLASS 1 RATHER THAN 0\cf3 \
	\
	0.1.wait;		\
	\}; \
	\
	\};\
	\
	arff.close;\
\}.fork; \
)\
\cf0 \
\cf2 //all wrong; was closer to DM than Bowie\cf3 \
\pard\pardeftab560\ql\qnatural
\cf3 (~callstart+\cf5 "weka.classifiers.bayes.NaiveBayes -p 0 -T"\cf3 +(~templocation++\cf5 "genreTest.arff"\cf3 )+\cf5 "-l bayes.wekamodel"\cf3 ).unixCmd\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf2 \
\
\
\
}