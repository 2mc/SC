{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf2 //This file is part of The BBCut Library. Copyright (C) 2001  Nick M.Collins distributed under the terms of the GNU General Public License full notice in file BBCutLibrary.help\
\cf0 \
\
\cf2 //independent control of tempo using the mouse- \
//of course, the two cutters will go out of phase \cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  sf, tc1, tc2, bbc1, bbc2, bbc3;\
\
sf=\cf3 SF3\cf0 .array([\cf4 "break"\cf0 , \cf4 "break2"\cf0 ],[8,4]);\
\
tc1=\cf3 TempoClock\cf0 .new(2);\
tc2=\cf3 TempoClock\cf0 .new(2);\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 // define controls on ControlBusses 10 and 11\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 SynthDef\cf0 (\cf4 "mousex"\cf0 , \{\
	\cf3 ReplaceOut\cf0 .kr(10, \cf3 MouseX\cf0 .kr(2,3));		\cf2 //MouseX tempo control \
	\cf3 ReplaceOut\cf0 .kr(11, \cf3 MouseY\cf0 .kr(2,3));		\cf2 //MouseY tempo control \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \}).play;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 OSCresponder\cf0 (s.addr, \cf5 '/c_set'\cf0 , \{\cf3 arg\cf0  time, resp, msg; \
\
\
if(msg.at(2)>0.01,\
\{\
if(msg.at(1)==10, \{tc1.tempo_(msg.at(2))\});\
if(msg.at(1)==11, \{tc2.tempo_(msg.at(2))\});\
\});\
\}).add;\
\
bbc1=\cf3 BBCut\cf0 (\cf3 BBCutSynthSF\cf0 (sf.at(0),panfunc:-0.75),\cf3 nil\cf0 ,tc1);\
bbc2=\cf3 BBCut\cf0 (\cf3 BBCutSynthSF\cf0 (sf.at(1),panfunc:0.75),\cf3 nil\cf0 ,tc2);\
\
bbc1.go; bbc2.go;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //must have OSCResponder for c_set, get 10 tempo readings a second\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 SystemClock\cf0 .sched(0.0, \{s.sendMsg(\cf4 "/c_get"\cf0 , 10); s.sendMsg(\cf4 "/c_get"\cf0 , 11); 0.1\});\
)\
\
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //changing time signature sequence\
//BBCutProc11 has a quirk in this regard because two arguments control \
//the eventual phraselength- would probably be fixed for a future BBCutProc13\
\cf0 (\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  sf, bbcut1, bbcut2;\
\cf3 var\cf0  barlength, subdiv, ec, tc;\
\
sf=\cf3 SF3\cf0 .array([\cf4 "break"\cf0 , \cf4 "break2"\cf0 ],[8,4]);\
\
\cf3 SynthDef\cf0 (\cf4 "sinebass"\cf0 , \{\cf3 Out\cf0 .ar(0,\cf3 Pan2\cf0 .ar(\cf3 SinOsc\cf0 .ar(77,0,0.5)*\cf3 Line\cf0 .kr(1,0,0.5, doneAction:2),0.0))\}).send(\cf3 Server\cf0 .local);\
\
ec=1.neg;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //5/8 + 6/8 + 7/8\cf0 \
barlength=[5,6,7]/2; \
subdiv=[5,6,7];\
\
tc=\cf3 TempoClock\cf0 (3);\
\
bbcut1= \cf3 BBCut\cf0 (\cf3 BBCutSynthSF\cf0 (sf.at(0), panfunc:1.0.neg), \cf3 ChooseCutProc\cf0 .new(\
\{\cf3 arg\cf0  phrasepos; \cf3 var\cf0  cut; cut=[0.75,0.5].choose;\
if(phrasepos>=0.8, \{cut=0.25; \});\
if(phrasepos<0.01,\{cut=1.0\});\
cut\}, \{(2.rand+1).min(3.rand+1)\},\cf3 nil\cf0 ,\{\cf3 arg\cf0  which; barlength.wrapAt(which)\}), tc);\
\
bbcut2= \cf3 BBCut\cf0 (\cf3 BBCutSynthSF\cf0 (sf.at(1),panfunc:1.0), \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 BBCutProc11\cf0 .new(\{ec=ec+1; subdiv.wrapAt(ec)\}, \{barlength.wrapAt(ec)\}, 1),tc);\
\
tc.schedAbs(tc.elapsedBeats,\{\
\cf3 var\cf0  num; \
\
num=0; \
\
bbcut1.go;\
bbcut2.go;\
\
tc.schedAbs(tc.elapsedBeats, \{\cf3 var\cf0  dur; \
dur= barlength.wrapAt(num);\
\
\cf3 Synth\cf0 (\cf5 \\sinebass\cf0 );\
\
num=num+1;\
\
dur;\
\});\
\
\cf3 nil\cf0 \
\}); \
\
\
)\
\
\
\
\
\
\
\
}