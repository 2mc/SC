{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica;\f1\fswiss\fcharset77 Helvetica-Bold;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 This file is part of The BBCut Library. Copyright (C) 2001  Nick M.Collins distributed under the terms of the GNU General Public License full notice in file BBCutLibrary.help\

\f1\b\fs30 \
SF3Selector
\f0\b0\fs24 \
\

\f1\b Superclass: Object
\f0\b0 \
\
Convenience class for an array of SF3 objects where one is indexed at a time. The client can \
force a new selection with a call to run an indexing function, or by explicitly deciding the index.\
The two derived classes, SF3SelectPerPhrase and SF3SelectPerBlock are for automatic\
updates (calls to the indexing function) based on the bbcut hierarchy, responding to \
updatephrase and updatebock respectively.  \
\

\f1\b \ul Class Methods
\f0\b0 \ulnone \
\
*
\f1\b new(array, indexfunc)
\f0\b0     From an array of SF3 objects and a user provided selection function, \
make a soundfile selector. The array argument can also be of the form [[filenames array], [beats array]]\
as a convenient shortcut. \
\

\f1\b \ul Instance Methods
\f0\b0 \ulnone \
\

\f1\b initSF3Selector\
\
newindex()	
\f0\b0 Force indexfunc to select a new index
\f1\b \
setindex(ind)	
\f0\b0 Stipulate a new index
\f1\b \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 averageBPS\cf2 \
\

\f0\b0 \cf0 Wrappers to fetch the correct info from the currently selected \cf3 SF3:\cf0 \

\f1\b \
soundFilePath\
\
soundFile\
\
beats\
\
tempo\
\
numFrames\
\
numChannels\
\
sampleRate\
\
buffer\
\
length\
\
secperbeat\
\

\f0\b0 Examples:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //normal use\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Post\cf0  << (\cf3 SF3Selector\cf0 (\cf3 SF3\cf0 .array([\cf4 "break"\cf0 ,\cf4 "break2"\cf0 ], [8,4])).array) <<nl;\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //shortcut\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 Post\cf0  << \cf3 SF3Selector\cf0 ([[\cf4 "break"\cf0 ,\cf4 "break2"\cf0 ], [8,4]]).array;\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //in use as a selector for bbcut\cf0 \
\cf2 //note how this isn't totally precise, because blocks may be under way when you swap\cf0 \
\cf2 //the source sample...\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  sf;\
\
sf=  \cf3 SF3Selector\cf0 ([[\cf4 "break"\cf0 ,\cf4 "break2"\cf0 ], [8,4]], \{2.rand\});\
\
b=\cf3 BBCut\cf0 .new(\cf3 BBCutSynthSF\cf0 (sf), \cf3 BBCutProc11\cf0 .new);\
\
b.tempo_(2).go;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //explicit choice\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 SystemClock\cf0 .sched(2.0, \{sf.setindex(1-(sf.index)); 1.0\});\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //or try this one instead to run the indexfunc\cf0 \
\cf2 //SystemClock.sched(2.0, \{sf.newindex;  2.0\});\cf0 \
)\
\
\
\
\cf2 //in use as a selector for bbcut\cf0 \
\cf2 //but now updating on new phrases automatically using the indexfunc \cf0 \
\cf2 //the indexfunc will be passed the current index, then the updatephrase parameters\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  sf;\
\
sf=  \cf3 SF3SelectPerPhrase\cf0 ([[\cf4 "break"\cf0 ,\cf4 "break2"\cf0 ], [8,4]], \{\cf3 arg\cf0  ind; 1-ind;\});\
\
b=\cf3 BBCut\cf0 .new(\cf3 BBCutSynthSF\cf0 (sf), \cf3 BBCutProc11\cf0 .new(phrasebars:1));\
\
b.tempo_(4).go;\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 //in use as a selector for bbcut\cf0 \
\cf2 //but now updating on every new block automatically using the indexfunc \cf0 \
\cf2 //the indexfunc will be passed the current index, then the updateblock parameters\cf0 \
(\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf3 var\cf0  sf;\
\
sf=  \cf3 SF3SelectPerBlock\cf0 ([[\cf4 "break"\cf0 ,\cf4 "break2"\cf0 ], [8,4]], \{\cf3 arg\cf0  ind; 1-ind;\});\
\
b=\cf3 BBCut\cf0 .new(\cf3 BBCutSynthSF\cf0 (sf), \cf3 WarpCutProc1\cf0 .new);\
\
b.tempo_(2).go;\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b\fs24 \cf0 \
\
}