{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica;\f1\fswiss\fcharset77 Helvetica-Bold;\f2\fnil\fcharset77 Monaco;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red96\green96\blue96;
}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs18 \cf0 This file is part of The BBCut Library. Copyright (C) 2001  Nick M.Collins distributed under the terms of the GNU General Public License full notice in file BBCutLibrary.help
\f1\b\fs30 \
\
StatBalNormStream
\f0\b0\fs24 \
\

\f1\b Superclass: Stream
\f0\b0 \
\
Stream class implementing Charles Ames' method of statistical feedback ([1], [2], [3]).\
This class implements all the full possibilities of the method as presented in [1]. This includes\
a normalisation step. Charles Ame's original seems incorrect, so I've added my own\
normalisation that maintains the sum of statistics as precisely zero. There is a touch of\
controversy here; Charles has communicated to me personally that he doesn't consider\
computer music his field any more, so his comments on my correction are unavailable. At\
some point a deeper mathematical analysis should help to resolve this.\
  Some normalisation step is necessary for situations where a weight may be zero for some\
time. Otherwise, the statistics will force unrealistic catchup when that weight becomes non zero again.\
Note that the set of weights, heterogeneity and accenture of a given test can be updated at any point.\
You could even change the set of states as long as the number of them remained the same.\
See StatBalStream for the simplified version without any controversial normalisation.\
The 
\f2\fs18 \cf2 Pstatbalnorm
\f0\fs24 \cf0  class is also provided for use with Patterns classes.\
\

\f1\b \ul Class Methods
\f0\b0 \ulnone \
\
*
\f1\b new(states, weights, heterogeneity, length)
\f0\b0    \
Create a StatBalNormStream object with the given parameters.\
\

\f1\b states
\f0\b0  - An array of the states to return\

\f1\b weights 
\f0\b0 - An array of weightings, one for each state. Weights may be zero.\

\f1\b heterogeneity 
\f0\b0 - any positive float. Whilst weightings will be approached in the long term, how quickly \
this occurs relative to serialism and the tolerance within which a running histogram of results fluctuates \
depends on the ratio of heterogeneity to accent (by default 1).\
Heterogeneity 0.0 gives fully deterministic results, like serialism. Increasing heterogeneity increases the\
shuffling of order of appearance of states, that is, less predictability in the short term. \
   If heterogenity is really large then floating point problems will eventually occur. \

\f1\b length
\f0\b0  - Number of calls to next before returning nil for sequence end. Default is inf for forever.\
\

\f1\b \ul Instance Methods
\f0\b0 \ulnone \
\

\f1\b next 
\f0\b0 Get the next state.\

\f1\b reset
\f0\b0  restart the stream.\
\
Examples-\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\fs18 \cf0 (	\cf3 //compare to weighted randomness, with heterogeneity 1.0, and change of weights halfway\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf2 var\cf0  sbns;\
\cf2 var\cf0  weights;\
\
weights= [0.6,0.3,0.1,0.0];\
\
sbns= \cf2 StatBalNormStream\cf0 .new([0,1,2,3],weights,1.0);\
\
20.do(\{\cf2 arg\cf0  i; \
\cf4 "wchoose "\cf0 .post;[0,1,2,3].wchoose(weights).post; \cf4 "  statbal "\cf0 .post;sbns.next.postln; \
\});\
\
weights=[0.6,0.0,0.1,0.3];\
\
\cf4 "HALFWAY"\cf0 .postln;\
\
sbns.weights_(weights);\
\
20.do(\{\cf2 arg\cf0  i; \
\cf4 "wchoose "\cf0 .post;[0,1,2,3].wchoose(weights).post; \cf4 "  statbal "\cf0 .post;sbns.next.postln; \
\});\
)
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs18 \cf0 \
////////////\
refs (all \cf2 Ames\cf0 , \cf2 Charles\cf0 )\
[1] \cf4 "Statistics and Compositional Balance"\cf0  \cf2 Perspectives\cf0  of \cf2 New\cf0  \cf2 Music\cf0  1989\
[2] \cf4 "A Catalogue of Sequence Generators"\cf0  \cf2 Leonardo\cf0  \cf2 Music\cf0  \cf2 Journal\cf0  1992\
also see \cf2 AGGREGATE\cf0  process from\
[3] \cf4 "Quantifying Musical Merit"\cf0  Interface: \cf2 Journal\cf0  of \cf2 New\cf0  \cf2 Music\cf0  \cf2 Research\cf0  1992\
\
////////////\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs24 \cf0 \
\
}