{\rtf1\mac\ansicpg10000\cocoartf102
{\fonttbl\f0\fswiss\fcharset77 Helvetica;\f1\fswiss\fcharset77 Helvetica-Bold;\f2\fswiss\fcharset77 Helvetica-Oblique;
\f3\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs20 \cf0 This file is part of The BBCut Library. Copyright (C) 2001  Nick M.Collins distributed under the terms of the GNU General Public License full notice in file BBCutLibrary.help\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\fs24 \cf0 \

\f1\b\fs30 BBCSData\

\f0\b0\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b \cf0 Superclass: BBCutSynth
\f0\b0 \
\
A cut synthesiser for an array of data, not for audio synthesis but for data cutting and text permuting. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \ul Class Methods\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b \cf0 \
*new(data, phrasestepfunc, windowsizefunc, randomoffset)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 \ul Instance Methods\ulnone \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\b \cf0 initBBCSData\
\
synthesisecut\
updatephrase\
chooseoffset\
setoffset\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b0 \cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f2\i \cf0 Examples
\f0\i0 - \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\fs18 \cf2 (\
\cf3 //don't expect the cuts to respect sentence boundaries\cf2 \
\cf4 var\cf2  text;\
\
text= \cf5 "A large piece of text which I desire to have cut up in some way \
for artistic purposes most probably known only to myself"\cf2 ;\
\
\cf3 //you won't hear anything because no synths are being spawned\cf2 \
\cf4 BBCut\cf2 (\cf4 BBCSData\cf2 .new(text, 0, text.size, 0.2), \cf4 BBCutProc11\cf2 .new).tempo_(2).go\
)
\f0\fs24 \cf2 \
\

\f3\fs18 \cf3 //moving window\cf2 \
\cf4 BBCut\cf2 (\cf4 BBCSData\cf2 .new(\cf5 "A large piece of text which I desire to have cut up in some way for artistic purposes most probably known only to myself"\cf2 , 16, 32, 0.2), \cf4 SQPusher1\cf2 .new(0.7)).tempo_(4).go\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs24 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\fs18 \cf2 \
(\
\cf4 var\cf2  sf;\
\
sf= \cf4 SF3\cf2 (\cf5 "break2"\cf2 ,4);\
\
\cf3 //moving window\cf2 \
\cf4 BBCut\cf2 ([\cf4 BBCSData\cf2 .new(\cf5 "A large piece of text which I desire to have cut up in some way for artistic purposes most probably known only to myself"\cf2 , 0, 120),\cf4 BBCutSynthSF\cf2 (sf)], \cf4 SQPusher1\cf2 .new(0.7)).tempo_(4).go\
\
)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs24 \cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\fs18 \cf2 \
\cf4 BBCut\cf2 (\cf4 BBCSData\cf2 .new([\cf5 "respect"\cf2 , \cf5 "the"\cf2 ,\cf5 "words"\cf2 , \cf5 "a"\cf2 , \cf5 "bit"\cf2 , \cf5 "more"\cf2 ], 2, 6), \cf4 SQPusher1\cf2 .new(0.7)).tempo_(4).go\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\fs24 \cf2 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f3\fs18 \cf2 (	\cf3 //Ashtead Surprise Major- will list chosen slices a-h\cf2 \
\cf4 var\cf2  pdata,method,campstream;\
\
pdata=[[0,2,4,6],[0,2,5],[0,2,6],[0,3,6],[0,4,6],[0,3,5],[0,2,4],[2,4,6],\cf4 Array\cf2 .new(0)];\
method=\cf4 Pseq\cf2 ([\cf4 Pseq\cf2 ([8],1),\cf4 Pseq\cf2 ([0,1,0,2,0,2,0,3,0,4,0,5,0,4,0,6,0,4,0,5,0,4,0,3,0,2,0,2,0,1,0,7],\cf4 inf\cf2 )],1).asStream;\
campstream= \cf4 CampStream\cf2 .new(pdata,method,8);\
\
\cf4 BBCut\cf2 (\cf4 BBCSData\cf2 .new(\cf5 "abcdefgh"\cf2 , 0, 8),\cf4 CampCutProc\cf2 .new(campstream,8.0)).tempo_(2.2).go;\
)
\f0\fs24 \cf2 \
\
//can also do allowable offsets/ known offsets style synthe engines for greater array respect\
\
}