if (this.isLog(2)) { ("\n\n" + thisProcess.nowExecutingPath.basename + "\n").postln; };

// \range, \utf8, \count, \name, \font, \fontSize, \color, \fallback

// 'range' is obligatory; fallbacks are tracked within defined ranges
// if you set multible defaults, make sure that utf8 lists do not intersect (otherwise encoding is arbitrary)



CodePage.defaultFont = CocoaDocument.defaultFont ? Font("Monaco", 9);
CodePage.color = Document.postColor;

CodePage.groups.putAll(
(
default: #[\agmIns, \agmVoc, \aGR, \agr]
//default: #[]
,agm: 	#[\agmIns, \agmVoc]
,pm99:	#[\pm99Ins, \pm99Voc]
,pm70: 	#[\pm70Ins2, \pm70Voc2]  // == pm88
,gr:		#[\aGR, \agr]
));

CodePage.pages.putAll(
(
agmIns:	(	
			range: #[186, 255]
			,utf8: #[ "𝉆", "𝉇", "𝉈", "𝇞", "𝇟", "𝇠", "𝇡", "𝇢", "𝇣", "𝇤", "𝇥", "𝇦", "𝇧", "𝇨", "𝇩", "𝇪", "𝉁", "𝉀", "𝈿", "𝈾", "𝈽", "𝈼", "𝈻", "𝈺", "𝍳", "𝈹", "𝍲", "𝈸", "𝈷", "𝍴", "𝈶", "𝈵", "𝈴", "𝈳", "𝈲", "𝍵", "𝍚", "Ͻ", "𝈱", "𝍜", "𝈰", "𝈯", "𝍷", "𝈮", "𝈭", "𝈬", "𝈫", "𝈪", "𝍗", "𝍞", "𝍸", "𝈩", "𝈨", "𝈧", "𝍘", "𝍶", "𝈦", "𝈥", "𝈤", "𝈣", "𝍙", "𝍟", "𝇾", "𝈡", "𝍛", "𝈠", "𝈟", "𝍝", "𝈞", "𝈝" ]
			,count: Array.series(70,  70,-1)
			,name: #[ 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, \Sigma, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ]
				.collect{|item| item.asSymbol}
			,font: "MonacoIns"
			,fontSize: CodePage.defaultFont.size + 8
			,color: Color.new255(0x00, 0x40, 0x80)
			,charsSymbolRatio: 2/1 
			/* charsSymbolRatio depends on fontsize -> find calculation later... */
	),
	
agmVoc: (
			range: #[186, 255]
			,utf8: #[ "𝇬", "𝇭", "𝇮", "𝇯", "𝇰", "𝇱", "𝇲", "𝇳", "𝇴", "𝇵", "𝇶", "𝇷", "𝇸", "𝇹", "𝇺", "𝇻", "𝈜", "𝈛", "𝈚", "𝈙", "𝈘", "𝇿", "𢌰", "𢌱", "𢌲", "𢌳", "𢌴", "𢌵", "𢌶", "𢌷", "𢌸", "𢌹", "𢌺", "𢌻", "𢌼", "𝇽", "𢌽", "𢌾", "𢌿", "Ϲ", "𝍿", "𝍾", "𝍽", "𝍼", "𝍻", "𝍺", "𝈗", "𝈖", "𝈕", "𝈔", "𝈓", "𝈒", "𝈑", "𝈐", "𝈏", "𝈎", "𝈍", "𝈌", "𝈋", "𝈊", "𝈉", "𝈈", "𝈇", "𝈆", "𝈅", "𝈄", "𝈃", "𝈂", "𝈁", "𝈀" ]
			,name: #[ 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, \Sigma, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ]
				.collect{|item| item.asSymbol}
			,font: "MonacoVoc"
			,color: Color.new255(0x80,0x00,0x40)
			,fallback: \agmIns
	),

pm99Ins: (
			range: #[186, 255]		
			,fallback: \agmIns
),

pm99Voc: (
			range: #[186, 255]
			,fallback: \agmVoc
),
	
pm70Ins:	(
			range: #[186, 252]
			,color: Color.new255(0x00,0x80,0x80)
			,fallback: \agmIns
			,count: Array.series(67,  67,-1)
			,name: #[ 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, \Sigma, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ]
				.collect{|item| item.asSymbol}
	),
	
pm70Voc: (
			range: #[186, 252]
			,color: Color.new255(0x80,0x80,0x00)
			,fallback: \agmVoc
			,count: Array.series(67,  67,-1)
			,name: #[ 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, \Sigma, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 ]
				.collect{|item| item.asSymbol}
	),

pm70Ins2:	(
			range: #[186, 255]
			,utf8: Array.newClear(67) ++ [ "𝍝", "𝈞", "𝈝" ]
			,color: Color.new255(255, 127, 36)
			,fallback: \pm70Ins
			,count: Array.series(67,  67,-1) ++ [nil, nil, nil]
			,name: (Array.newClear(67) ++ [\tree, \two, \one]).collect{|item| item.asSymbol}
	),
	
pm70Voc2: (
			range: #[186, 255] // 255-186 = 69
			,utf8: Array.newClear(67) ++ [ "𝈂", "𝈁", "𝈀" ] //70
			,color: Color.new255(127, 255, 0)
			,fallback: \pm70Voc
			,count: Array.series(67,  67,-1) ++ [nil, nil, nil]
			,name: (Array.newClear(67) ++ [ "drei", "zwei", "eins" ])
					.collect{|item| item.asSymbol}
	),
	
aGR:	(	
			range: #[128, 251] // 251-128 = 123
			,utf8: #[ "Α", "Β", "Γ", "Δ", "Ε", "Ζ", "Η", "Θ", "Ι", "Κ", "Λ", "Μ", "Ν", "Ξ", "Ο", "Π", "Ρ", "Σ", "Τ", "Υ", "Φ", "Χ", "Ψ", "Ω", "Ἀ", "Ἁ", "Ἂ", "Ἃ", "Ἄ", "Ἅ", "Ἆ", "Ἇ", "Ἐ", "Ἑ", "Ἒ", "Ἓ", "Ἔ", "Ἕ", "Ἠ", "Ἡ", "Ἢ", "Ἣ", "Ἤ", "Ἥ", "Ἦ", "Ἧ", "Ἰ", "Ἱ", "Ἲ", "Ἳ", "Ἴ", "Ἵ", "Ἶ", "Ἷ", "Ὀ", "Ὁ", "Ὂ", "Ὃ", "Ὄ", "Ὅ", "", "Ὑ", "", "Ὓ", "", "Ὕ", "", "Ὗ", "Ὠ", "Ὡ", "Ὢ", "Ὣ", "Ὤ", "Ὥ", "Ὦ", "Ὧ", "ᾈ", "ᾉ", "ᾊ", "ᾋ", "ᾌ", "ᾍ", "ᾎ", "ᾏ", "ᾘ", "ᾙ", "ᾚ", "ᾛ", "ᾜ", "ᾝ", "ᾞ", "ᾟ", "ᾨ", "ᾩ", "ᾪ", "ᾫ", "ᾬ", "ᾭ", "ᾮ", "ᾯ", "Ᾰ", "Ᾱ", "Ὰ", "Ά", "ᾼ", "Ὲ", "Έ", "Ὴ", "Ή", "ῌ", "Ῐ", "Ῑ", "Ὶ", "Ί", "Ῠ", "Ῡ", "Ὺ", "Ύ", "Ῥ", "Ὸ", "Ό", "Ὼ", "Ώ", "ῼ" ] // 124
			,count: Array.series(124, 1, 1)
			,name: Array.series(124, 1, 1).collect{|item| item.asSymbol}
			,font: "Monaco-up-GR"
			,fontSize: CodePage.defaultFont.size + 6
			,color: Color.new255(0x66, 0x54, 0x42)
	),
	
agr:	(	
			range: #[105, 251] // 251-105 = 146
			,utf8: #[  "ᾲ", "ᾴ", "ᾶ", "ᾷ", "ῂ", "ῄ", "ῆ", "ῇ", "ῒ", "ΐ", "ῖ", "ῗ", "ῢ", "ΰ", "ῤ", "ῦ", "ῧ", "ῲ", "ῴ", "ῶ", "ῷ", "ς", "", "α", "β", "γ", "δ", "ε", "ζ", "η", "θ", "ι", "κ", "λ", "μ", "ν", "ξ", "ο", "π", "ρ", "σ", "τ", "υ", "φ", "χ", "ψ", "ω", "ἀ", "ἁ", "ἂ", "ἃ", "ἄ", "ἅ", "ἆ", "ἇ", "ἐ", "ἑ", "ἒ", "ἓ", "ἔ", "ἕ", "ἠ", "ἡ", "ἢ", "ἣ", "ἤ", "ἥ", "ἦ", "ἧ", "ἰ", "ἱ", "ἲ", "ἳ", "ἴ", "ἵ", "ἶ", "ἷ", "ὀ", "ὁ", "ὂ", "ὃ", "ὄ", "ὅ", "ὐ", "ὑ", "ὒ", "ὓ", "ὔ", "ὕ", "ὖ", "ὗ", "ὠ", "ὡ", "ὢ", "ὣ", "ὤ", "ὥ", "ὦ", "ὧ", "ᾀ", "ᾁ", "ᾂ", "ᾃ", "ᾄ", "ᾅ", "ᾆ", "ᾇ", "ᾐ", "ᾑ", "ᾒ", "ᾓ", "ᾔ", "ᾕ", "ᾖ", "ᾗ", "ᾠ", "ᾡ", "ᾢ", "ᾣ", "ᾤ", "ᾥ", "ᾦ", "ᾧ", "ᾰ", "ᾱ", "ὰ", "ά", "ᾳ", "ὲ", "έ", "ὴ", "ή", "ῃ", "ῐ", "ῑ", "ὶ", "ί", "ῠ", "ῡ", "ὺ", "ύ", "ῥ", "ὸ", "ό", "ὼ", "ώ", "ῳ" ] // 147
			,count: (Array.series(22, 221, 1) ++[666]++ Array.series(124,1,1))
			,name: (Array.series(22, 221, 1) ++[\NumberOfTheBeast]++ Array.series(124,1,1))
				.collect{|item| item.asSymbol}
			,font: "Monaco-lc-gr"
			,color: Color.new255(0x80, 0x69, 0x52)
			,fontSize: CodePage.defaultFont.size + 6
	)
))
