{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf470
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red191\green0\blue0;\red255\green102\blue0;
\red0\green0\blue191;\red0\green115\blue0;\red0\green0\blue255;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs18 \cf2 \
\cf3 // Record 60 minutes of the performance in 2 buffers for 2 channels. \cf2 \
\cf3 //:Allocate the buffers\cf2 \
\
\cf4 ~vangelis\cf2  = \cf5 Buffer\cf2 .alloc(\cf5 Server\cf2 .default, 44100 * 60 * 60, 1);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf4 ~andreas\cf2  = \cf5 Buffer\cf2 .alloc(\cf5 Server\cf2 .default, 44100 * 60 * 60, 1);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 \
\cf3 //:Create the synthef for recording\cf2 \
\
\cf5 SynthDef\cf2 (\cf6 \\recbuf\cf2 , \{ \cf7 | in = 0, bufnum = 0 |\cf2 \
\'a0 \'a0 \cf5 RecordBuf\cf2 .ar(\cf5 In\cf2 .ar(in), bufnum, doneAction: 2, loop: 0);\
\}).add;\
\
\cf3 //:TEST Record into the buffer starting now\cf2 \
\
\cf4 ~test\cf2  = \{ \cf5 WhiteNoise\cf2 .ar(0.1) \}.play;\
\
\cf4 ~vrec\cf2  = \cf5 Synth\cf2 (\cf6 \\recbuf\cf2 , [\cf6 \\in\cf2 , 8, \cf6 \\bufnum\cf2 , \cf4 ~vangelis\cf2 .bufnum], \cf4 ~test\cf2 .synth, \cf6 \\addAfter\cf2 );\
\
\cf3 //:Test buffer input\cf2 \
\cf4 ~vangelis\cf2 .play;\
\
\cf3 //:\cf2 \
\cf4 ~andreas\cf2 .play;\
\
\cf3 //:RECORD VANGELI and ANDREA\cf2 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf4 ~vrec\cf2  = \cf5 Synth\cf2 (\cf6 \\recbuf\cf2 , [\cf6 \\in\cf2 , 8, \cf6 \\bufnum\cf2 , \cf4 ~vangelis\cf2 .bufnum]);\
\cf4 ~arec\cf2  = \cf5 Synth\cf2 (\cf6 \\recbuf\cf2 , [\cf6 \\in\cf2 , 9, \cf6 \\bufnum\cf2 , \cf4 ~andreas\cf2 .bufnum]);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 \
\cf3 //:Play buffer - plain\cf2 \
\cf5 SynthDef\cf2 (\cf6 \\playbuf\cf2 , \{\cf7 | out = 0, bufnum = 0, amp = 1, rate = 1 |\cf2 \
\'a0 \'a0 \cf5 Out\cf2 .ar(out,\
\'a0 \'a0 \'a0 \'a0 \cf5 PlayBuf\cf2 .ar(1, bufnum, \cf5 BufRateScale\cf2 .kr(bufnum) * rate, doneAction:2) * amp\
\'a0 \'a0 )\
\}).add;\
\
\
\cf3 //:Test play andreas\cf2 \
\cf4 ~andytest\cf2  = \cf5 Synth\cf2 (\cf6 \\playbuf\cf2 , [\cf6 \\bufnum\cf2 , \cf4 ~andreas\cf2 .bufnum]);\
\
\cf4 ~andytest\cf2 .set(\cf6 \\amp\cf2 , 1);\
\
\cf3 //:playbuf with triple rate\cf2 \
\cf4 ~triplebuf\cf2  =  \{\cf7 | out = 0, bufnum = 0, amp = 1, rate = 1 |\cf2 \
	\cf7 var\cf2  source;\
	source = \cf5 PlayBuf\cf2 .ar(1, bufnum, \cf5 BufRateScale\cf2 .kr(bufnum) * (rate * [1, 1.1, 1.2] * 0.2), doneAction:2);\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural
\cf2 	\cf5 Out\cf2 .ar(out, \cf5 Mix\cf2 (source) * amp);\
\}.play(args: [\cf6 \\bufnum\cf2 , \cf4 ~vangelis\cf2 .bufnum, \cf6 \\amp\cf2 , 10])\
\
\cf3 //:--\cf2 \
\cf4 ~triplebuf\cf2 .free;\
\
\cf3 //:Other stuff done with a buffer --- now use Phasor / BufRd\cf2 \
\cf4 ~andytest\cf2  =  \{ \cf7 | out = 0, bufnum = 0, amp = 1, rate = 1, trig = 0, resetPos = 0 |\cf2 \
	\cf7 var\cf2  phasor, source;\
	phasor = Phasor.ar(trig, BufRateScale.kr(bufnum) * rate, 0, \
		BufFrames.kr(b.bufnum), resetPos * \cf0 BufFrames.kr(b.bufnum)\cf2 );\
	source = \cf5 BufRd\cf2 .ar(1, bufnum, \
		\cf5 BufRateScale\cf2 .kr(bufnum) * rate * [1, 1.1, 1.2]), doneAction:2);\
	\cf5 Out\cf2 .ar(out, \cf5 source\cf2  * amp);\
\}.play(args: [\cf6 \\bufnum\cf2 , \cf4 ~andreas\cf2 .bufnum, \cf6 \\amp\cf2 , 30])\
\
\cf3 //:--\cf2 \
\cf4 ~andytest\cf2 .free;}