{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf350
{\fonttbl\f0\fnil\fcharset0 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
}
\paperw12240\paperh15840\vieww9000\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 \
\cf2 /* Cygnus Thu, 03 December 2009, 09:27AM\
Build some useful menus and keyboard shortcuts\
\
Instructions: Put this file in the following folder: \
\
/Users/YourAccountName/Library/Application Support/SuperCollider/\
\
*/\cf0 \
\pard\pardeftab560\li1140\fi-1140\ql\qnatural
\cf0 \
\cf3 CocoaMenuItem\cf0 .addToMenu(\cf4 "User Menu"\cf0 , \cf4 "Edit startup file"\cf0 , [\cf4 "s"\cf0 , \cf3 true\cf0 , \cf3 true\cf0 ], \{ \
	\cf3 Document\cf0 .open(\cf3 UserPath\cf0 (\cf4 "startup.rtf"\cf0 ))\
\});\
\
\cf2 // CodeSelector.install;\cf0 \
\cf3 DocPoller\cf0 .start;\
\cf3 DocSession\cf0 .makeMenuItems;\
\
\cf3 CocoaMenuItem\cf0 .addToMenu(\cf4 "User Menu"\cf0 , \cf4 "Open User Directory"\cf0 , [\cf4 "o"\cf0 , \cf3 true\cf0 , \cf3 true\cf0 ], \{ \
	\cf4 "open ~/Library/Application\\\\ Support/SuperCollider"\cf0 .unixCmd;\
\});\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
\pard\pardeftab560\ql\qnatural
\cf0 g = \cf3 SCMenuGroup\cf0 (\cf3 nil\cf0 , \cf4 "UserMenu"\cf0 , 10);\
a = \cf3 SCMenuItem\cf0 (g, \cf4 "Open Startup File"\cf0 );\
a.action = \{ (\cf3 Platform\cf0 .userAppSupportDir ++ \cf4 "/startup.rtf"\cf0 ).openTextFile; \};\
a.setShortCut(\cf4 "s"\cf0 , \cf3 true\cf0 , \cf3 true\cf0 ); \cf2 // Cmd-ctrl-alt-s\cf0 \
\
\
a = \cf3 SCMenuItem\cf0 (g, \cf4 "Boot Local Server"\cf0 );\
a.action = \{ \cf3 Server\cf0 .local.boot \};\
a.setShortCut(\cf4 "l"\cf0 , \cf3 true\cf0 , \cf3 true\cf0 ); \cf2 // Cmd-ctrl-alt-l\cf0 \
a = \cf3 SCMenuItem\cf0 (g, \cf4 "Quit Local Server"\cf0 );\
a.action = \{ \cf3 Server\cf0 .local.quit \};\
a.setShortCut(\cf4 "l"\cf0 , \cf3 true\cf0 ); \cf2 //////  // Cmd-alt-l\cf0 \
a = \cf3 SCMenuItem\cf0 (g, \cf4 "Boot Internal Server"\cf0 );\
a.action = \{\cf3 Server\cf0 .internal.boot\};\
a.setShortCut(\cf4 "i"\cf0 , \cf3 true\cf0 , \cf3 true\cf0 ); \cf2 // Cmd-ctrl-alt-i\cf0 \
a = \cf3 SCMenuItem\cf0 (g, \cf4 "Quit Internal Server"\cf0 );\
a.action = \{ \cf3 Server\cf0 .internal.quit \};\
a.setShortCut(\cf4 "i"\cf0 , \cf3 true\cf0 ); \cf2 // Cmd-alt-i\cf0 \
\cf2 //a = SCMenuItem(g, "Boot SwingOSC Server");\cf0 \
\cf2 //a.action = \{ SwingOSC.default.boot \};\cf0 \
\cf2 //a.setShortCut("s", true, true); // Cmd-ctrl-alt-s\cf0 \
\cf2 //a = SCMenuItem(g, "Quit SwingOSC Server");\cf0 \
\cf2 //a.action = \{ SwingOSC.default.quit \};\cf0 \
\cf2 //a.setShortCut("s", true); // Cmd-alt-s\cf0 \
a = \cf3 SCMenuItem\cf0 (g, \cf4 "Install Quarks"\cf0 );\
a.action = \{ \cf3 Quarks\cf0 .gui \};\
a.setShortCut(\cf4 "q"\cf0 , \cf3 true\cf0 , \cf3 true\cf0 ); \cf2 // Cmd-ctrl-alt-q\cf0 \
\
k = \cf3 SCMenuSeparator\cf0 (g, 1); \cf2 // add a separator\cf0 \
k = \cf3 SCMenuSeparator\cf0 (g, 8); \cf2 // add a separator\cf0 \
k = \cf3 SCMenuSeparator\cf0 (g, 10); \cf2 // add a separator\cf0 \
\
\
a = \cf3 SCMenuItem\cf0 (g, \cf4 "Re-read Help Directory From Disk"\cf0 );\
a.action = \{ \cf3 Help\cf0 .updateTree; \};\
a.setShortCut(\cf4 "r"\cf0 , \cf3 true\cf0 , \cf3 true\cf0 ); \cf2 // Cmd-ctrl-alt-r\cf0 \
\
a = \cf3 SCMenuItem\cf0 (g, \cf4 "Post Work Sound Root Directory"\cf0 );\
a.action = \{ (\cf3 Platform\cf0 .userAppSupportDir ++ \cf4 "/sounds/"\cf0 ).asCompileString.postln; \};\
a.setShortCut(\cf4 "S"\cf0 , \cf3 true\cf0 , \cf3 true\cf0 ); \cf2 // Cmd-ctrl-alt-S\cf0 \
\
a = \cf3 SCMenuItem\cf0 (g, \cf4 "'Load Buffers By Code' Dialog"\cf0 );\
a.action = \{\
	\cf3 CocoaDialog\cf0 .getPaths(\{ \cf3 | paths |\cf0 \
		\cf4 "(\
b = ["\cf0 .postln;\
		paths do: \{ \cf3 | p |\cf0 \
			postf(\cf4 "\\t \\"%\\",\\n"\cf0 , p);\
		\};\
		\cf4 "] collect: Buffer.readChannel(Server.default, _, channels: [0], action: _.updateInfo);\
)"\cf0 .postln;\
	\}, \{ \}, \cf3 true\cf0 );\
\};\
a.setShortCut(\cf4 "b"\cf0 , \cf3 true\cf0 , \cf3 true\cf0 ); \cf2 // Cmd-ctrl-alt-b\cf0 \
\
\
k = \cf3 SCMenuSeparator\cf0 (g, 15); \cf2 // add a separator\cf0 \
\
\
a = \cf3 SCMenuItem\cf0 (g, \cf4 "Post All Incoming OSC messages"\cf0 );\
a.action = \{  \cf3 thisProcess\cf0 .recvOSCfunc = \{ \cf3 | ... args |\cf0  args.postln \}; \};\
a.setShortCut(\cf4 "o"\cf0 , \cf3 true\cf0 , \cf3 true\cf0 ); \cf2 // Cmd-ctrl-alt-o\cf0 \
a = \cf3 SCMenuItem\cf0 (g, \cf4 "Stop Posting Incoming OSC messages"\cf0 );\
a.action = \{  \cf3 thisProcess\cf0 .recvOSCfunc = \cf3 nil\cf0  \};\
a.setShortCut(\cf4 "O"\cf0 , \cf3 true\cf0 , \cf3 true\cf0 ); \cf2 // Cmd-ctrl-alt-shift-o\cf0 \
\
\
\
\cf2 //===================================================================\cf0 \
\cf2 //Creating GUI for booting the Default SwingOSC Server\cf0 \
\
\pard\pardeftab560\ql\qnatural

\fs20 \cf0  \
\pard\pardeftab560\ql\qnatural

\fs18 \cf2 /*\
\
\{\
var window, button, status, swingoscserver;\
\
swingoscserver = SwingOSC.default;  \
\
window = Window("SwingOSC Default Server ", Rect(5, 260, 290, 40));\
button = Button(window, Rect(5, 10, 50, 20));\
button.states = [["Boot"], ["Quit"]]; \
button.action = \{ | me | \
	\
	if ( me.value == 1, \{ swingoscserver.boot; "Booting SwingOSC Server...".postln \} );\
	if ( me.value == 0, \{ swingoscserver.quit; "Quitting SwingOSC Server...".postln \} );\
	\
\
\};\
\
window.front;\
\}.value;\
\
*/\cf0 \
}